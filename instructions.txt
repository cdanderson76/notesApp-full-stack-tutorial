RATELIMITUI


NOTE: .env FILE INFORMATION HAS TO BE PROVIDED FOR THIS CHALLENGE!


1. In 'server.js', move the CORS middleware before all other middleware.  Readjust
   the timing in 'upstash.js' to test out the rate limiter.  If done correctly,
   you should see the 'RateLimiter.jsx' content on the page when it hits its limit.
   
   Also, change the CORS middleware to operate on any requests coming from only
   'http://localhost:5173' rather than from ANY URL


2. Build out the 'RateLimiterUI.jsx' UI.  Here's the boilerplate code:

   <div className="max-w-6xl mx-auto px-4 py-8">
      <div className="bg-primary/10 border border-primary/30 rounded-lg shadow-md">
        <div className="flex flex-col md:flex-row items-center p-6">
          <div className="flex-shrink-0 bg-primary/20 p-4 rounded-full mb-4 md:mb-0 md:mr-6">
            
          </div>
          <div className="flex-1 text-center md:text-left">
            <h3 className="text-xl font-bold mb-2"></h3>
            <p className="text-base-content mb-1"></p>
            <p className="text-sm text-base-content/70"></p>
          </div>
        </div>
      </div>
    </div>
   
    You'll need to use the zap icon from lucide react to make this UI.  You can find it here:
    
    https://lucide.dev/icons/zap


3. Modify the 'HomePage' application to where it briefly shows 'Loading notes' on the 
   screen right before notes are loaded.  Use the following boilerplate code for this:

   <div className="max-w-7xl mx-auto p-4 mt-6">
        <div className="text-center text-primary py-10"></div> }
   </div>

   NOTE: FOR THE SAKE OF THE PROJECT, REACT TOAST IS NO LONGER USED



Solution: https://shorturl.at/pZhcl (2:19:35 - 2:22:00)
